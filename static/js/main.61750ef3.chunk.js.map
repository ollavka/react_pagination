{"version":3,"sources":["components/Pagination/Pagination.tsx","components/PageItems/PageItems.tsx","components/PerPageSelector/PerPageSelector.tsx","App.tsx","utils.ts","index.tsx"],"names":["Button","Pagination","props","total","currentPage","perPage","onPageChange","pageCount","Math","ceil","pages","Array","from","length","setPageLinkClassNames","pageNumber","classNames","active","setPageButtonsClassNames","type","isPrevButtonDisabled","Prev","isNextButtonDisabled","Next","disabled","className","href","onClick","prevPage","map","_","currPageNumber","nextPage","PageItems","currentPageItems","item","PerPageSelector","itemsPerPage","handleChangeItemsPerPage","id","value","onChange","htmlFor","items","to","numbers","n","push","getNumbers","App","useState","setCurrentPage","setItemsPerPage","pageItems","reduce","acc","idx","newPage","slice","getNewPages","currLastItem","lastItem","firstItem","event","target","page","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61750ef3.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nenum Button {\n  Prev = 'prev',\n  Next = 'next',\n}\n\nexport const Pagination: FC<Props> = (props) => {\n  const {\n    total,\n    currentPage = 1,\n    perPage,\n    onPageChange,\n  } = props;\n\n  const pageCount = Math.ceil(total / perPage);\n  const pages = Array.from({ length: pageCount });\n\n  const setPageLinkClassNames = (pageNumber: number) => {\n    return classNames('page-item', {\n      active: currentPage === pageNumber,\n    });\n  };\n\n  const setPageButtonsClassNames = (type: Button) => {\n    const isPrevButtonDisabled = type === Button.Prev\n      && currentPage === 1;\n\n    const isNextButtonDisabled = type === Button.Next\n      && currentPage === pageCount;\n\n    return classNames('page-item', {\n      disabled: isPrevButtonDisabled || isNextButtonDisabled,\n    });\n  };\n\n  const handlePrevSlide = () => {\n    const prevPage = currentPage - 1;\n\n    if (prevPage > 0) {\n      onPageChange(prevPage);\n    }\n  };\n\n  const handleNextSlide = () => {\n    const nextPage = currentPage + 1;\n\n    if (nextPage < pageCount + 1) {\n      onPageChange(nextPage);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={setPageButtonsClassNames(Button.Prev)}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevSlide}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map((_, pageNumber) => {\n        const currPageNumber = pageNumber + 1;\n\n        return (\n          <li\n            key={currPageNumber}\n            className={setPageLinkClassNames(currPageNumber)}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${currPageNumber}`}\n              onClick={() => onPageChange(currPageNumber)}\n            >\n              {currPageNumber}\n            </a>\n          </li>\n        );\n      })}\n\n      <li className={setPageButtonsClassNames(Button.Next)}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageCount}\n          onClick={handleNextSlide}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { FC } from 'react';\n\ntype Props = {\n  currentPageItems: string[];\n};\n\nexport const PageItems: FC<Props> = ({ currentPageItems }) => (\n  <ul>\n    {currentPageItems.map(item => (\n      <li data-cy=\"item\" key={item}>{item}</li>\n    ))}\n  </ul>\n);\n","import { FC, ChangeEvent } from 'react';\n\ntype Props = {\n  itemsPerPage: number;\n  handleChangeItemsPerPage: (\n    event: ChangeEvent<HTMLSelectElement>\n  ) => void;\n};\n\nexport const PerPageSelector: FC<Props> = (props) => {\n  const {\n    itemsPerPage,\n    handleChangeItemsPerPage,\n  } = props;\n\n  return (\n    <div className=\"form-group row\">\n      <div className=\"col-3 col-sm-2 col-xl-1\">\n        <select\n          data-cy=\"perPageSelector\"\n          id=\"perPageSelector\"\n          className=\"form-control\"\n          value={itemsPerPage}\n          onChange={handleChangeItemsPerPage}\n        >\n          <option value=\"3\">3</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n      </div>\n\n      <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n        items per page\n      </label>\n    </div>\n  );\n};\n","import { FC, useState, ChangeEvent } from 'react';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { PageItems } from './components/PageItems';\nimport { PerPageSelector } from './components/PerPageSelector';\nimport './App.scss';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst getNewPages = (itemsPerPage: number) => {\n  const pageCount = Math.ceil(items.length / itemsPerPage);\n\n  const newPageItems = Array\n    .from({ length: pageCount })\n    .reduce((acc: string[][], _, idx) => {\n      const newPage = items.slice(itemsPerPage * idx, itemsPerPage * (idx + 1));\n\n      acc.push(newPage);\n\n      return acc;\n    }, []);\n\n  return newPageItems;\n};\n\nexport const App: FC = () => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [itemsPerPage, setItemsPerPage] = useState<number>(5);\n\n  const pageItems = getNewPages(itemsPerPage);\n  const currentPageItems = pageItems[currentPage - 1];\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleChangeItemsPerPage = (event: ChangeEvent<HTMLSelectElement>) => {\n    setCurrentPage(1);\n    setItemsPerPage(+event.target.value);\n  };\n\n  const currLastItem = currentPage * itemsPerPage;\n\n  const lastItem = currLastItem > items.length\n    ? (currLastItem - (currLastItem % items.length))\n    : currLastItem;\n\n  const firstItem = lastItem - (pageItems[currentPage - 1].length) + 1;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <PerPageSelector\n        itemsPerPage={itemsPerPage}\n        handleChangeItemsPerPage={handleChangeItemsPerPage}\n      />\n\n      <Pagination\n        total={items.length}\n        currentPage={currentPage}\n        perPage={itemsPerPage}\n        onPageChange={handlePageChange}\n      />\n\n      <PageItems currentPageItems={currentPageItems} />\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}